// Code generated by protoc-gen-go. DO NOT EDIT.
// source: files.proto

package models

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PathRequest struct {
	Auth                 *Authentication `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	FullPath             string          `protobuf:"bytes,2,opt,name=fullPath,proto3" json:"fullPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PathRequest) Reset()         { *m = PathRequest{} }
func (m *PathRequest) String() string { return proto.CompactTextString(m) }
func (*PathRequest) ProtoMessage()    {}
func (*PathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{0}
}

func (m *PathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathRequest.Unmarshal(m, b)
}
func (m *PathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathRequest.Marshal(b, m, deterministic)
}
func (m *PathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathRequest.Merge(m, src)
}
func (m *PathRequest) XXX_Size() int {
	return xxx_messageInfo_PathRequest.Size(m)
}
func (m *PathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PathRequest proto.InternalMessageInfo

func (m *PathRequest) GetAuth() *Authentication {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *PathRequest) GetFullPath() string {
	if m != nil {
		return m.FullPath
	}
	return ""
}

type PathsRequest struct {
	Auth                 *Authentication `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	FullPaths            []string        `protobuf:"bytes,2,rep,name=fullPaths,proto3" json:"fullPaths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PathsRequest) Reset()         { *m = PathsRequest{} }
func (m *PathsRequest) String() string { return proto.CompactTextString(m) }
func (*PathsRequest) ProtoMessage()    {}
func (*PathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{1}
}

func (m *PathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathsRequest.Unmarshal(m, b)
}
func (m *PathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathsRequest.Marshal(b, m, deterministic)
}
func (m *PathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathsRequest.Merge(m, src)
}
func (m *PathsRequest) XXX_Size() int {
	return xxx_messageInfo_PathsRequest.Size(m)
}
func (m *PathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PathsRequest proto.InternalMessageInfo

func (m *PathsRequest) GetAuth() *Authentication {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *PathsRequest) GetFullPaths() []string {
	if m != nil {
		return m.FullPaths
	}
	return nil
}

type SearchRequest struct {
	Auth                 *Authentication `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Term                 string          `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{2}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetAuth() *Authentication {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *SearchRequest) GetTerm() string {
	if m != nil {
		return m.Term
	}
	return ""
}

type ShareRequest struct {
	Auth                 *Authentication `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	FullPaths            []string        `protobuf:"bytes,2,rep,name=fullPaths,proto3" json:"fullPaths,omitempty"`
	UserIDs              []uint32        `protobuf:"varint,3,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ShareRequest) Reset()         { *m = ShareRequest{} }
func (m *ShareRequest) String() string { return proto.CompactTextString(m) }
func (*ShareRequest) ProtoMessage()    {}
func (*ShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{3}
}

func (m *ShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareRequest.Unmarshal(m, b)
}
func (m *ShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareRequest.Marshal(b, m, deterministic)
}
func (m *ShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareRequest.Merge(m, src)
}
func (m *ShareRequest) XXX_Size() int {
	return xxx_messageInfo_ShareRequest.Size(m)
}
func (m *ShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShareRequest proto.InternalMessageInfo

func (m *ShareRequest) GetAuth() *Authentication {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *ShareRequest) GetFullPaths() []string {
	if m != nil {
		return m.FullPaths
	}
	return nil
}

func (m *ShareRequest) GetUserIDs() []uint32 {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

type CreateFileRequest struct {
	Auth                 *Authentication `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	FullPath             string          `protobuf:"bytes,2,opt,name=fullPath,proto3" json:"fullPath,omitempty"`
	IsDir                bool            `protobuf:"varint,3,opt,name=isDir,proto3" json:"isDir,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateFileRequest) Reset()         { *m = CreateFileRequest{} }
func (m *CreateFileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFileRequest) ProtoMessage()    {}
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{4}
}

func (m *CreateFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileRequest.Unmarshal(m, b)
}
func (m *CreateFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileRequest.Marshal(b, m, deterministic)
}
func (m *CreateFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileRequest.Merge(m, src)
}
func (m *CreateFileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFileRequest.Size(m)
}
func (m *CreateFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileRequest proto.InternalMessageInfo

func (m *CreateFileRequest) GetAuth() *Authentication {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *CreateFileRequest) GetFullPath() string {
	if m != nil {
		return m.FullPath
	}
	return ""
}

func (m *CreateFileRequest) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

type FileInfoResponse struct {
	FileInfo             *FileInfo   `protobuf:"bytes,1,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	Content              []*FileInfo `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FileInfoResponse) Reset()         { *m = FileInfoResponse{} }
func (m *FileInfoResponse) String() string { return proto.CompactTextString(m) }
func (*FileInfoResponse) ProtoMessage()    {}
func (*FileInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{5}
}

func (m *FileInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfoResponse.Unmarshal(m, b)
}
func (m *FileInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfoResponse.Marshal(b, m, deterministic)
}
func (m *FileInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfoResponse.Merge(m, src)
}
func (m *FileInfoResponse) XXX_Size() int {
	return xxx_messageInfo_FileInfoResponse.Size(m)
}
func (m *FileInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfoResponse proto.InternalMessageInfo

func (m *FileInfoResponse) GetFileInfo() *FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *FileInfoResponse) GetContent() []*FileInfo {
	if m != nil {
		return m.Content
	}
	return nil
}

type FileInfosUpdateRequest struct {
	Auth                 *Authentication `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	FullPaths            []string        `protobuf:"bytes,2,rep,name=fullPaths,proto3" json:"fullPaths,omitempty"`
	FileInfoUpdate       *FileInfoUpdate `protobuf:"bytes,3,opt,name=fileInfoUpdate,proto3" json:"fileInfoUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FileInfosUpdateRequest) Reset()         { *m = FileInfosUpdateRequest{} }
func (m *FileInfosUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*FileInfosUpdateRequest) ProtoMessage()    {}
func (*FileInfosUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{6}
}

func (m *FileInfosUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfosUpdateRequest.Unmarshal(m, b)
}
func (m *FileInfosUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfosUpdateRequest.Marshal(b, m, deterministic)
}
func (m *FileInfosUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfosUpdateRequest.Merge(m, src)
}
func (m *FileInfosUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_FileInfosUpdateRequest.Size(m)
}
func (m *FileInfosUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfosUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfosUpdateRequest proto.InternalMessageInfo

func (m *FileInfosUpdateRequest) GetAuth() *Authentication {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *FileInfosUpdateRequest) GetFullPaths() []string {
	if m != nil {
		return m.FullPaths
	}
	return nil
}

func (m *FileInfosUpdateRequest) GetFileInfoUpdate() *FileInfoUpdate {
	if m != nil {
		return m.FileInfoUpdate
	}
	return nil
}

type FileList struct {
	FileInfos            []*FileInfo `protobuf:"bytes,1,rep,name=fileInfos,proto3" json:"fileInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FileList) Reset()         { *m = FileList{} }
func (m *FileList) String() string { return proto.CompactTextString(m) }
func (*FileList) ProtoMessage()    {}
func (*FileList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{7}
}

func (m *FileList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileList.Unmarshal(m, b)
}
func (m *FileList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileList.Marshal(b, m, deterministic)
}
func (m *FileList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileList.Merge(m, src)
}
func (m *FileList) XXX_Size() int {
	return xxx_messageInfo_FileList.Size(m)
}
func (m *FileList) XXX_DiscardUnknown() {
	xxx_messageInfo_FileList.DiscardUnknown(m)
}

var xxx_messageInfo_FileList proto.InternalMessageInfo

func (m *FileList) GetFileInfos() []*FileInfo {
	if m != nil {
		return m.FileInfos
	}
	return nil
}

type Path struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{8}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type FileInfo struct {
	// @inject_tag: gorm:"primary_key;auto_increment"
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty" gorm:"primary_key;auto_increment"`
	// @inject_tag: gorm:"index:fullPath"
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty" gorm:"index:fullPath"`
	// @inject_tag: gorm:"index:fullPath"
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" gorm:"index:fullPath"`
	IsDir bool   `protobuf:"varint,4,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Size  int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	// @inject_tag: gorm:"index:fullPath"
	OwnerID              uint32   `protobuf:"varint,6,opt,name=ownerID,proto3" json:"ownerID,omitempty" gorm:"index:fullPath"`
	MimeType             string   `protobuf:"bytes,7,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Starred              bool     `protobuf:"varint,8,opt,name=starred,proto3" json:"starred,omitempty"`
	ParentID             uint32   `protobuf:"varint,9,opt,name=parentID,proto3" json:"parentID,omitempty"`
	ShareID              uint32   `protobuf:"varint,10,opt,name=shareID,proto3" json:"shareID,omitempty"`
	LastChanged          int64    `protobuf:"varint,11,opt,name=lastChanged,proto3" json:"lastChanged,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{9}
}

func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *FileInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileInfo) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

func (m *FileInfo) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileInfo) GetOwnerID() uint32 {
	if m != nil {
		return m.OwnerID
	}
	return 0
}

func (m *FileInfo) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *FileInfo) GetStarred() bool {
	if m != nil {
		return m.Starred
	}
	return false
}

func (m *FileInfo) GetParentID() uint32 {
	if m != nil {
		return m.ParentID
	}
	return 0
}

func (m *FileInfo) GetShareID() uint32 {
	if m != nil {
		return m.ShareID
	}
	return 0
}

func (m *FileInfo) GetLastChanged() int64 {
	if m != nil {
		return m.LastChanged
	}
	return 0
}

type FileInfoUpdate struct {
	// Types that are valid to be assigned to PathOO:
	//	*FileInfoUpdate_Path
	PathOO isFileInfoUpdate_PathOO `protobuf_oneof:"pathOO"`
	// Types that are valid to be assigned to NameOO:
	//	*FileInfoUpdate_Name
	NameOO isFileInfoUpdate_NameOO `protobuf_oneof:"nameOO"`
	// Types that are valid to be assigned to StarredOO:
	//	*FileInfoUpdate_Starred
	StarredOO isFileInfoUpdate_StarredOO `protobuf_oneof:"starredOO"`
	// Types that are valid to be assigned to CopyOO:
	//	*FileInfoUpdate_Copy
	CopyOO               isFileInfoUpdate_CopyOO `protobuf_oneof:"copyOO"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FileInfoUpdate) Reset()         { *m = FileInfoUpdate{} }
func (m *FileInfoUpdate) String() string { return proto.CompactTextString(m) }
func (*FileInfoUpdate) ProtoMessage()    {}
func (*FileInfoUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac8f32ecfdd343c, []int{10}
}

func (m *FileInfoUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfoUpdate.Unmarshal(m, b)
}
func (m *FileInfoUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfoUpdate.Marshal(b, m, deterministic)
}
func (m *FileInfoUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfoUpdate.Merge(m, src)
}
func (m *FileInfoUpdate) XXX_Size() int {
	return xxx_messageInfo_FileInfoUpdate.Size(m)
}
func (m *FileInfoUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfoUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfoUpdate proto.InternalMessageInfo

type isFileInfoUpdate_PathOO interface {
	isFileInfoUpdate_PathOO()
}

type FileInfoUpdate_Path struct {
	Path string `protobuf:"bytes,1,opt,name=path,proto3,oneof"`
}

func (*FileInfoUpdate_Path) isFileInfoUpdate_PathOO() {}

func (m *FileInfoUpdate) GetPathOO() isFileInfoUpdate_PathOO {
	if m != nil {
		return m.PathOO
	}
	return nil
}

func (m *FileInfoUpdate) GetPath() string {
	if x, ok := m.GetPathOO().(*FileInfoUpdate_Path); ok {
		return x.Path
	}
	return ""
}

type isFileInfoUpdate_NameOO interface {
	isFileInfoUpdate_NameOO()
}

type FileInfoUpdate_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*FileInfoUpdate_Name) isFileInfoUpdate_NameOO() {}

func (m *FileInfoUpdate) GetNameOO() isFileInfoUpdate_NameOO {
	if m != nil {
		return m.NameOO
	}
	return nil
}

func (m *FileInfoUpdate) GetName() string {
	if x, ok := m.GetNameOO().(*FileInfoUpdate_Name); ok {
		return x.Name
	}
	return ""
}

type isFileInfoUpdate_StarredOO interface {
	isFileInfoUpdate_StarredOO()
}

type FileInfoUpdate_Starred struct {
	Starred bool `protobuf:"varint,3,opt,name=starred,proto3,oneof"`
}

func (*FileInfoUpdate_Starred) isFileInfoUpdate_StarredOO() {}

func (m *FileInfoUpdate) GetStarredOO() isFileInfoUpdate_StarredOO {
	if m != nil {
		return m.StarredOO
	}
	return nil
}

func (m *FileInfoUpdate) GetStarred() bool {
	if x, ok := m.GetStarredOO().(*FileInfoUpdate_Starred); ok {
		return x.Starred
	}
	return false
}

type isFileInfoUpdate_CopyOO interface {
	isFileInfoUpdate_CopyOO()
}

type FileInfoUpdate_Copy struct {
	Copy bool `protobuf:"varint,4,opt,name=copy,proto3,oneof"`
}

func (*FileInfoUpdate_Copy) isFileInfoUpdate_CopyOO() {}

func (m *FileInfoUpdate) GetCopyOO() isFileInfoUpdate_CopyOO {
	if m != nil {
		return m.CopyOO
	}
	return nil
}

func (m *FileInfoUpdate) GetCopy() bool {
	if x, ok := m.GetCopyOO().(*FileInfoUpdate_Copy); ok {
		return x.Copy
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FileInfoUpdate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FileInfoUpdate_OneofMarshaler, _FileInfoUpdate_OneofUnmarshaler, _FileInfoUpdate_OneofSizer, []interface{}{
		(*FileInfoUpdate_Path)(nil),
		(*FileInfoUpdate_Name)(nil),
		(*FileInfoUpdate_Starred)(nil),
		(*FileInfoUpdate_Copy)(nil),
	}
}

func _FileInfoUpdate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FileInfoUpdate)
	// pathOO
	switch x := m.PathOO.(type) {
	case *FileInfoUpdate_Path:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Path)
	case nil:
	default:
		return fmt.Errorf("FileInfoUpdate.PathOO has unexpected type %T", x)
	}
	// nameOO
	switch x := m.NameOO.(type) {
	case *FileInfoUpdate_Name:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Name)
	case nil:
	default:
		return fmt.Errorf("FileInfoUpdate.NameOO has unexpected type %T", x)
	}
	// starredOO
	switch x := m.StarredOO.(type) {
	case *FileInfoUpdate_Starred:
		t := uint64(0)
		if x.Starred {
			t = 1
		}
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("FileInfoUpdate.StarredOO has unexpected type %T", x)
	}
	// copyOO
	switch x := m.CopyOO.(type) {
	case *FileInfoUpdate_Copy:
		t := uint64(0)
		if x.Copy {
			t = 1
		}
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("FileInfoUpdate.CopyOO has unexpected type %T", x)
	}
	return nil
}

func _FileInfoUpdate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FileInfoUpdate)
	switch tag {
	case 1: // pathOO.path
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PathOO = &FileInfoUpdate_Path{x}
		return true, err
	case 2: // nameOO.name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.NameOO = &FileInfoUpdate_Name{x}
		return true, err
	case 3: // starredOO.starred
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StarredOO = &FileInfoUpdate_Starred{x != 0}
		return true, err
	case 4: // copyOO.copy
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CopyOO = &FileInfoUpdate_Copy{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _FileInfoUpdate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FileInfoUpdate)
	// pathOO
	switch x := m.PathOO.(type) {
	case *FileInfoUpdate_Path:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Path)))
		n += len(x.Path)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// nameOO
	switch x := m.NameOO.(type) {
	case *FileInfoUpdate_Name:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// starredOO
	switch x := m.StarredOO.(type) {
	case *FileInfoUpdate_Starred:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// copyOO
	switch x := m.CopyOO.(type) {
	case *FileInfoUpdate_Copy:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*PathRequest)(nil), "files.PathRequest")
	proto.RegisterType((*PathsRequest)(nil), "files.PathsRequest")
	proto.RegisterType((*SearchRequest)(nil), "files.SearchRequest")
	proto.RegisterType((*ShareRequest)(nil), "files.ShareRequest")
	proto.RegisterType((*CreateFileRequest)(nil), "files.CreateFileRequest")
	proto.RegisterType((*FileInfoResponse)(nil), "files.FileInfoResponse")
	proto.RegisterType((*FileInfosUpdateRequest)(nil), "files.FileInfosUpdateRequest")
	proto.RegisterType((*FileList)(nil), "files.FileList")
	proto.RegisterType((*Path)(nil), "files.Path")
	proto.RegisterType((*FileInfo)(nil), "files.FileInfo")
	proto.RegisterType((*FileInfoUpdate)(nil), "files.FileInfoUpdate")
}

func init() { proto.RegisterFile("files.proto", fileDescriptor_cac8f32ecfdd343c) }

var fileDescriptor_cac8f32ecfdd343c = []byte{
	// 781 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x51, 0x6f, 0xe2, 0x46,
	0x10, 0xc6, 0x40, 0x88, 0x3d, 0x0e, 0xa4, 0xdd, 0x90, 0xc4, 0xb2, 0x5a, 0x09, 0xf9, 0x89, 0x2a,
	0x2a, 0xaa, 0x52, 0xa9, 0x52, 0xda, 0xe4, 0xa1, 0xc4, 0x6d, 0xb0, 0x94, 0x96, 0xc8, 0x34, 0x95,
	0x9a, 0xb7, 0x2d, 0x0c, 0xc1, 0x95, 0xb1, 0x5d, 0xef, 0x72, 0x11, 0xf7, 0x07, 0xee, 0x0f, 0xdc,
	0xcb, 0xbd, 0xde, 0x2f, 0x3d, 0xed, 0xae, 0x6d, 0x0c, 0x17, 0x14, 0x09, 0xe5, 0x9e, 0xd8, 0x99,
	0x9d, 0x6f, 0xf6, 0x9b, 0x6f, 0x67, 0xc7, 0x80, 0x39, 0x0d, 0x42, 0x64, 0xbd, 0x24, 0x8d, 0x79,
	0x4c, 0xf6, 0xa4, 0x61, 0x37, 0x1f, 0x31, 0xc2, 0x94, 0x86, 0xca, 0x6b, 0xc3, 0x82, 0x61, 0xaa,
	0xd6, 0xce, 0xdf, 0x60, 0xde, 0x51, 0x3e, 0xf3, 0xf1, 0xff, 0x05, 0x32, 0x4e, 0xce, 0xa0, 0x4e,
	0x17, 0x7c, 0x66, 0x69, 0x1d, 0xad, 0x6b, 0x9e, 0x9f, 0xf6, 0x72, 0xe0, 0xaf, 0x0b, 0x3e, 0xc3,
	0x88, 0x07, 0x63, 0xca, 0x83, 0x38, 0xf2, 0x65, 0x10, 0xb1, 0x41, 0x9f, 0x2e, 0xc2, 0x50, 0xe0,
	0xad, 0x6a, 0x47, 0xeb, 0x1a, 0x7e, 0x61, 0x3b, 0xff, 0xc0, 0x81, 0xf8, 0x65, 0x3b, 0x25, 0xfe,
	0x06, 0x8c, 0x3c, 0x11, 0xb3, 0xaa, 0x9d, 0x5a, 0xd7, 0xf0, 0x57, 0x0e, 0xe7, 0x0e, 0x9a, 0x23,
	0xa4, 0xe9, 0x78, 0x37, 0xd2, 0x04, 0xea, 0x1c, 0xd3, 0x79, 0x46, 0x58, 0xae, 0x1d, 0x06, 0x07,
	0xa3, 0x19, 0x4d, 0xf1, 0xf5, 0xc9, 0x12, 0x0b, 0xf6, 0x85, 0xda, 0x9e, 0xcb, 0xac, 0x5a, 0xa7,
	0xd6, 0x6d, 0xfa, 0xb9, 0xe9, 0xa4, 0xf0, 0xf5, 0x75, 0x8a, 0x94, 0xe3, 0xef, 0x41, 0x88, 0xaf,
	0xad, 0x3f, 0x69, 0xc3, 0x5e, 0xc0, 0xdc, 0x20, 0xb5, 0x6a, 0x1d, 0xad, 0xab, 0xfb, 0xca, 0x70,
	0xfe, 0x83, 0xaf, 0xc4, 0x69, 0x5e, 0x34, 0x8d, 0x7d, 0x64, 0x49, 0x1c, 0x31, 0x24, 0x67, 0xa0,
	0x4f, 0x33, 0x5f, 0x76, 0xec, 0x61, 0x4f, 0xf5, 0x50, 0x11, 0x5a, 0x04, 0x90, 0xef, 0x60, 0x7f,
	0x1c, 0x47, 0x1c, 0x23, 0x2e, 0x4b, 0x7d, 0x26, 0x36, 0xdf, 0x77, 0x3e, 0x6a, 0x70, 0x92, 0x7b,
	0xd9, 0x7d, 0x32, 0xa1, 0xfc, 0x4b, 0xe8, 0x7b, 0x05, 0xad, 0x9c, 0x9c, 0x3a, 0x43, 0x16, 0x6c,
	0x9e, 0x1f, 0x6f, 0xf0, 0xca, 0x08, 0x6c, 0x04, 0x3b, 0x17, 0xa0, 0x8b, 0x88, 0xdb, 0x80, 0x71,
	0xf2, 0x3d, 0x18, 0xf9, 0x2e, 0xb3, 0xb4, 0xe7, 0xab, 0x5b, 0x45, 0x38, 0x36, 0xd4, 0xa5, 0xd2,
	0x04, 0xea, 0x09, 0xcd, 0x8a, 0x31, 0x7c, 0xb9, 0x76, 0xde, 0x57, 0x55, 0x5e, 0xa9, 0x59, 0x0b,
	0xaa, 0x9e, 0x2b, 0xb7, 0x9b, 0x7e, 0xd5, 0x73, 0x0b, 0x40, 0x75, 0x05, 0x10, 0xbe, 0x88, 0xce,
	0x15, 0x79, 0xc3, 0x97, 0xeb, 0xd5, 0x15, 0xd6, 0x4b, 0x57, 0x28, 0x22, 0x59, 0xf0, 0x16, 0xad,
	0xbd, 0x8e, 0xd6, 0xad, 0xf9, 0x72, 0x2d, 0x9a, 0x2c, 0x7e, 0x8a, 0x44, 0x5b, 0x59, 0x0d, 0x79,
	0x4c, 0x6e, 0x8a, 0x16, 0x99, 0x07, 0x73, 0xfc, 0x6b, 0x99, 0xa0, 0xb5, 0xaf, 0x5a, 0x24, 0xb7,
	0x05, 0x8a, 0x71, 0x9a, 0xa6, 0x38, 0xb1, 0x74, 0x79, 0x42, 0x6e, 0x0a, 0x54, 0x42, 0x53, 0x8c,
	0xb8, 0xe7, 0x5a, 0x86, 0x4c, 0x58, 0xd8, 0x12, 0x25, 0xde, 0x8a, 0xe7, 0x5a, 0xa0, 0xce, 0xca,
	0x4c, 0xd2, 0x01, 0x33, 0xa4, 0x8c, 0x5f, 0xcf, 0x68, 0xf4, 0x88, 0x13, 0xcb, 0x94, 0x04, 0xcb,
	0x2e, 0xe7, 0x83, 0x06, 0xad, 0xf5, 0x0b, 0x21, 0xed, 0xb2, 0x7a, 0x83, 0x4a, 0x26, 0x47, 0x3b,
	0x93, 0x43, 0x4a, 0x34, 0xd0, 0x32, 0x41, 0xec, 0x15, 0x61, 0xd9, 0xd5, 0x83, 0xea, 0x8a, 0x72,
	0x1b, 0xea, 0xe3, 0x38, 0x59, 0x2a, 0xad, 0x06, 0x35, 0x5f, 0x5a, 0x7d, 0x1d, 0x1a, 0x22, 0xdf,
	0x70, 0x28, 0x56, 0x22, 0xc7, 0x70, 0xd8, 0x37, 0xc1, 0xc8, 0x40, 0xca, 0x2d, 0x02, 0x87, 0xc3,
	0xf3, 0x77, 0x0d, 0x38, 0x10, 0xdc, 0xd8, 0x08, 0xd3, 0x37, 0xc1, 0x18, 0x49, 0x0f, 0xf4, 0x87,
	0x20, 0x91, 0x2e, 0x72, 0x94, 0xf5, 0x41, 0x79, 0xa4, 0xd9, 0x66, 0xc9, 0xe9, 0x54, 0xc8, 0x25,
	0x98, 0x37, 0xc8, 0x8b, 0x5b, 0x27, 0xa5, 0xdd, 0x1c, 0x71, 0xba, 0xd9, 0x4e, 0xd9, 0x1b, 0x74,
	0x2a, 0xe4, 0x02, 0x60, 0x35, 0x0d, 0x88, 0x95, 0x05, 0x7e, 0x36, 0x20, 0xec, 0xcd, 0x8e, 0x74,
	0x2a, 0xc4, 0x83, 0x43, 0x25, 0x66, 0xf1, 0xda, 0xc8, 0xb7, 0x1b, 0x51, 0xeb, 0xef, 0xcf, 0x3e,
	0x2e, 0x5e, 0xdc, 0x6f, 0xf3, 0x84, 0x2f, 0xff, 0x40, 0xc6, 0xe8, 0xa3, 0x60, 0xf1, 0x0b, 0x98,
	0x2e, 0x86, 0xa8, 0x52, 0x6d, 0x29, 0x7b, 0x2b, 0xf8, 0x67, 0x00, 0x39, 0x45, 0xd7, 0xb1, 0xe5,
	0xc1, 0xba, 0x1d, 0xfb, 0x13, 0x98, 0x6a, 0xa6, 0x2b, 0x70, 0x3b, 0x07, 0x97, 0xe7, 0xfc, 0x5a,
	0xed, 0xe2, 0xc5, 0x3a, 0x15, 0x72, 0x05, 0x87, 0x37, 0xc8, 0x47, 0xea, 0x3e, 0x15, 0x76, 0xdb,
	0x38, 0x79, 0x0e, 0x7e, 0x09, 0x2d, 0x01, 0x17, 0x14, 0x77, 0x40, 0xf7, 0xa1, 0xe5, 0x23, 0x1b,
	0xd3, 0x68, 0xf8, 0x14, 0xbd, 0x80, 0xde, 0x5a, 0xf8, 0x35, 0x1c, 0xa9, 0x1c, 0xf7, 0x0c, 0x53,
	0x99, 0xa4, 0xbf, 0xf4, 0x5c, 0x72, 0xd4, 0x93, 0xdf, 0xe8, 0x7b, 0xf9, 0xad, 0x78, 0x51, 0xbd,
	0x5b, 0x38, 0xb9, 0x41, 0xae, 0xee, 0xf8, 0xcf, 0x98, 0x07, 0xd3, 0xec, 0xd8, 0x1d, 0x08, 0xfd,
	0xa0, 0xf5, 0xf5, 0x87, 0xc6, 0x3c, 0x9e, 0x60, 0xc8, 0xfe, 0x6d, 0xc8, 0xff, 0x08, 0x3f, 0x7e,
	0x0a, 0x00, 0x00, 0xff, 0xff, 0x28, 0x0c, 0x57, 0x60, 0x54, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FilesServiceClient is the client API for FilesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilesServiceClient interface {
	ZipFiles(ctx context.Context, in *PathsRequest, opts ...grpc.CallOption) (*Path, error)
	GetFileInfo(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*FileInfoResponse, error)
	CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*FileInfo, error)
	UpdateFileInfos(ctx context.Context, in *FileInfosUpdateRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
	DeleteFiles(ctx context.Context, in *PathsRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
	ShareFiles(ctx context.Context, in *ShareRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
	SearchFiles(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*FileList, error)
	GetStarredFiles(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*FileList, error)
	GetSharedFiles(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*FileList, error)
	RescanOwnFiles(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*EmptyMessage, error)
	RescanUserFilesByID(ctx context.Context, in *UserIDRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
	GetUpdateNotifications(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (FilesService_GetUpdateNotificationsClient, error)
}

type filesServiceClient struct {
	cc *grpc.ClientConn
}

func NewFilesServiceClient(cc *grpc.ClientConn) FilesServiceClient {
	return &filesServiceClient{cc}
}

func (c *filesServiceClient) ZipFiles(ctx context.Context, in *PathsRequest, opts ...grpc.CallOption) (*Path, error) {
	out := new(Path)
	err := c.cc.Invoke(ctx, "/files.FilesService/ZipFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) GetFileInfo(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*FileInfoResponse, error) {
	out := new(FileInfoResponse)
	err := c.cc.Invoke(ctx, "/files.FilesService/GetFileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*FileInfo, error) {
	out := new(FileInfo)
	err := c.cc.Invoke(ctx, "/files.FilesService/CreateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) UpdateFileInfos(ctx context.Context, in *FileInfosUpdateRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/files.FilesService/UpdateFileInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) DeleteFiles(ctx context.Context, in *PathsRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/files.FilesService/DeleteFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) ShareFiles(ctx context.Context, in *ShareRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/files.FilesService/ShareFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) SearchFiles(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*FileList, error) {
	out := new(FileList)
	err := c.cc.Invoke(ctx, "/files.FilesService/SearchFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) GetStarredFiles(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*FileList, error) {
	out := new(FileList)
	err := c.cc.Invoke(ctx, "/files.FilesService/GetStarredFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) GetSharedFiles(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*FileList, error) {
	out := new(FileList)
	err := c.cc.Invoke(ctx, "/files.FilesService/GetSharedFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) RescanOwnFiles(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/files.FilesService/RescanOwnFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) RescanUserFilesByID(ctx context.Context, in *UserIDRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/files.FilesService/RescanUserFilesByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) GetUpdateNotifications(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (FilesService_GetUpdateNotificationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FilesService_serviceDesc.Streams[0], "/files.FilesService/GetUpdateNotifications", opts...)
	if err != nil {
		return nil, err
	}
	x := &filesServiceGetUpdateNotificationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FilesService_GetUpdateNotificationsClient interface {
	Recv() (*EmptyMessage, error)
	grpc.ClientStream
}

type filesServiceGetUpdateNotificationsClient struct {
	grpc.ClientStream
}

func (x *filesServiceGetUpdateNotificationsClient) Recv() (*EmptyMessage, error) {
	m := new(EmptyMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FilesServiceServer is the server API for FilesService service.
type FilesServiceServer interface {
	ZipFiles(context.Context, *PathsRequest) (*Path, error)
	GetFileInfo(context.Context, *PathRequest) (*FileInfoResponse, error)
	CreateFile(context.Context, *CreateFileRequest) (*FileInfo, error)
	UpdateFileInfos(context.Context, *FileInfosUpdateRequest) (*EmptyMessage, error)
	DeleteFiles(context.Context, *PathsRequest) (*EmptyMessage, error)
	ShareFiles(context.Context, *ShareRequest) (*EmptyMessage, error)
	SearchFiles(context.Context, *SearchRequest) (*FileList, error)
	GetStarredFiles(context.Context, *Authentication) (*FileList, error)
	GetSharedFiles(context.Context, *Authentication) (*FileList, error)
	RescanOwnFiles(context.Context, *Authentication) (*EmptyMessage, error)
	RescanUserFilesByID(context.Context, *UserIDRequest) (*EmptyMessage, error)
	GetUpdateNotifications(*Authentication, FilesService_GetUpdateNotificationsServer) error
}

func RegisterFilesServiceServer(s *grpc.Server, srv FilesServiceServer) {
	s.RegisterService(&_FilesService_serviceDesc, srv)
}

func _FilesService_ZipFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).ZipFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/ZipFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).ZipFiles(ctx, req.(*PathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_GetFileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).GetFileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/GetFileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).GetFileInfo(ctx, req.(*PathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_CreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).CreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/CreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).CreateFile(ctx, req.(*CreateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_UpdateFileInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileInfosUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).UpdateFileInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/UpdateFileInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).UpdateFileInfos(ctx, req.(*FileInfosUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_DeleteFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).DeleteFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/DeleteFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).DeleteFiles(ctx, req.(*PathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_ShareFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).ShareFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/ShareFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).ShareFiles(ctx, req.(*ShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_SearchFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).SearchFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/SearchFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).SearchFiles(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_GetStarredFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).GetStarredFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/GetStarredFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).GetStarredFiles(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_GetSharedFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).GetSharedFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/GetSharedFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).GetSharedFiles(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_RescanOwnFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).RescanOwnFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/RescanOwnFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).RescanOwnFiles(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_RescanUserFilesByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).RescanUserFilesByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/files.FilesService/RescanUserFilesByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).RescanUserFilesByID(ctx, req.(*UserIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_GetUpdateNotifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Authentication)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FilesServiceServer).GetUpdateNotifications(m, &filesServiceGetUpdateNotificationsServer{stream})
}

type FilesService_GetUpdateNotificationsServer interface {
	Send(*EmptyMessage) error
	grpc.ServerStream
}

type filesServiceGetUpdateNotificationsServer struct {
	grpc.ServerStream
}

func (x *filesServiceGetUpdateNotificationsServer) Send(m *EmptyMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _FilesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "files.FilesService",
	HandlerType: (*FilesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ZipFiles",
			Handler:    _FilesService_ZipFiles_Handler,
		},
		{
			MethodName: "GetFileInfo",
			Handler:    _FilesService_GetFileInfo_Handler,
		},
		{
			MethodName: "CreateFile",
			Handler:    _FilesService_CreateFile_Handler,
		},
		{
			MethodName: "UpdateFileInfos",
			Handler:    _FilesService_UpdateFileInfos_Handler,
		},
		{
			MethodName: "DeleteFiles",
			Handler:    _FilesService_DeleteFiles_Handler,
		},
		{
			MethodName: "ShareFiles",
			Handler:    _FilesService_ShareFiles_Handler,
		},
		{
			MethodName: "SearchFiles",
			Handler:    _FilesService_SearchFiles_Handler,
		},
		{
			MethodName: "GetStarredFiles",
			Handler:    _FilesService_GetStarredFiles_Handler,
		},
		{
			MethodName: "GetSharedFiles",
			Handler:    _FilesService_GetSharedFiles_Handler,
		},
		{
			MethodName: "RescanOwnFiles",
			Handler:    _FilesService_RescanOwnFiles_Handler,
		},
		{
			MethodName: "RescanUserFilesByID",
			Handler:    _FilesService_RescanUserFilesByID_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUpdateNotifications",
			Handler:       _FilesService_GetUpdateNotifications_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "files.proto",
}
