// Code generated by protoc-gen-go. DO NOT EDIT.
// source: system.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SystemStats struct {
	Version              string             `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	AllocMem             uint64             `protobuf:"varint,2,opt,name=allocMem,proto3" json:"allocMem,omitempty"`
	TotalAllocMem        uint64             `protobuf:"varint,3,opt,name=totalAllocMem,proto3" json:"totalAllocMem,omitempty"`
	SystemMem            uint64             `protobuf:"varint,4,opt,name=systemMem,proto3" json:"systemMem,omitempty"`
	NumGC                uint32             `protobuf:"varint,5,opt,name=numGC,proto3" json:"numGC,omitempty"`
	GoVersion            string             `protobuf:"bytes,6,opt,name=goVersion,proto3" json:"goVersion,omitempty"`
	NumGoroutines        uint32             `protobuf:"varint,7,opt,name=numGoroutines,proto3" json:"numGoroutines,omitempty"`
	NumSessions          uint32             `protobuf:"varint,8,opt,name=numSessions,proto3" json:"numSessions,omitempty"`
	Uptime               *duration.Duration `protobuf:"bytes,9,opt,name=uptime,proto3" json:"uptime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SystemStats) Reset()         { *m = SystemStats{} }
func (m *SystemStats) String() string { return proto.CompactTextString(m) }
func (*SystemStats) ProtoMessage()    {}
func (*SystemStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_system_568a09be23221d90, []int{0}
}
func (m *SystemStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemStats.Unmarshal(m, b)
}
func (m *SystemStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemStats.Marshal(b, m, deterministic)
}
func (dst *SystemStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemStats.Merge(dst, src)
}
func (m *SystemStats) XXX_Size() int {
	return xxx_messageInfo_SystemStats.Size(m)
}
func (m *SystemStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemStats.DiscardUnknown(m)
}

var xxx_messageInfo_SystemStats proto.InternalMessageInfo

func (m *SystemStats) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SystemStats) GetAllocMem() uint64 {
	if m != nil {
		return m.AllocMem
	}
	return 0
}

func (m *SystemStats) GetTotalAllocMem() uint64 {
	if m != nil {
		return m.TotalAllocMem
	}
	return 0
}

func (m *SystemStats) GetSystemMem() uint64 {
	if m != nil {
		return m.SystemMem
	}
	return 0
}

func (m *SystemStats) GetNumGC() uint32 {
	if m != nil {
		return m.NumGC
	}
	return 0
}

func (m *SystemStats) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *SystemStats) GetNumGoroutines() uint32 {
	if m != nil {
		return m.NumGoroutines
	}
	return 0
}

func (m *SystemStats) GetNumSessions() uint32 {
	if m != nil {
		return m.NumSessions
	}
	return 0
}

func (m *SystemStats) GetUptime() *duration.Duration {
	if m != nil {
		return m.Uptime
	}
	return nil
}

func init() {
	proto.RegisterType((*SystemStats)(nil), "system.SystemStats")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SystemServiceClient is the client API for SystemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemServiceClient interface {
	GetSystemStats(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*SystemStats, error)
}

type systemServiceClient struct {
	cc *grpc.ClientConn
}

func NewSystemServiceClient(cc *grpc.ClientConn) SystemServiceClient {
	return &systemServiceClient{cc}
}

func (c *systemServiceClient) GetSystemStats(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*SystemStats, error) {
	out := new(SystemStats)
	err := c.cc.Invoke(ctx, "/system.SystemService/GetSystemStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemServiceServer is the server API for SystemService service.
type SystemServiceServer interface {
	GetSystemStats(context.Context, *Authentication) (*SystemStats, error)
}

func RegisterSystemServiceServer(s *grpc.Server, srv SystemServiceServer) {
	s.RegisterService(&_SystemService_serviceDesc, srv)
}

func _SystemService_GetSystemStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).GetSystemStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/system.SystemService/GetSystemStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).GetSystemStats(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "system.SystemService",
	HandlerType: (*SystemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystemStats",
			Handler:    _SystemService_GetSystemStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system.proto",
}

func init() { proto.RegisterFile("system.proto", fileDescriptor_system_568a09be23221d90) }

var fileDescriptor_system_568a09be23221d90 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xc1, 0x4e, 0xf3, 0x30,
	0x10, 0x84, 0xff, 0xf4, 0x6f, 0xd3, 0xd6, 0x25, 0x1c, 0x0c, 0x12, 0x26, 0x42, 0x28, 0xaa, 0x38,
	0xe4, 0x94, 0x8a, 0xf2, 0x02, 0x14, 0x90, 0x7a, 0xe2, 0x40, 0x2a, 0x71, 0xe0, 0x96, 0xb6, 0x4b,
	0x88, 0x14, 0x7b, 0x2b, 0x7b, 0x5d, 0x89, 0x17, 0xe3, 0xf9, 0x50, 0xec, 0x84, 0xb6, 0xc7, 0x19,
	0x7f, 0xe3, 0x5d, 0xcd, 0xb2, 0x33, 0xf3, 0x6d, 0x08, 0x64, 0xb6, 0xd3, 0x48, 0xc8, 0x43, 0xaf,
	0xe2, 0xa8, 0x04, 0x05, 0xba, 0xa8, 0xbd, 0x1d, 0xdf, 0x96, 0x88, 0x65, 0x0d, 0x33, 0xa7, 0xd6,
	0xf6, 0x73, 0xb6, 0xb5, 0xba, 0xa0, 0x0a, 0x95, 0x7f, 0x9f, 0xfe, 0xf4, 0xd8, 0x64, 0xe5, 0x92,
	0x2b, 0x2a, 0xc8, 0x70, 0xc1, 0x86, 0x7b, 0xd0, 0xa6, 0x42, 0x25, 0x82, 0x24, 0x48, 0xc7, 0x79,
	0x27, 0x79, 0xcc, 0x46, 0x45, 0x5d, 0xe3, 0xe6, 0x15, 0xa4, 0xe8, 0x25, 0x41, 0xda, 0xcf, 0xff,
	0x34, 0xbf, 0x63, 0x11, 0x21, 0x15, 0xf5, 0xa2, 0x03, 0xfe, 0x3b, 0xe0, 0xd4, 0xe4, 0x37, 0x6c,
	0xec, 0x97, 0x6c, 0x88, 0xbe, 0x23, 0x0e, 0x06, 0xbf, 0x64, 0x03, 0x65, 0xe5, 0xf2, 0x59, 0x0c,
	0x92, 0x20, 0x8d, 0x72, 0x2f, 0x9a, 0x4c, 0x89, 0xef, 0xed, 0x46, 0xa1, 0xdb, 0xe8, 0x60, 0x34,
	0x73, 0x1b, 0x0c, 0x35, 0x5a, 0xaa, 0x14, 0x18, 0x31, 0x74, 0xd9, 0x53, 0x93, 0x27, 0x6c, 0xa2,
	0xac, 0x5c, 0x81, 0x69, 0x32, 0x46, 0x8c, 0x1c, 0x73, 0x6c, 0xf1, 0x7b, 0x16, 0xda, 0x1d, 0x55,
	0x12, 0xc4, 0x38, 0x09, 0xd2, 0xc9, 0xfc, 0x3a, 0xf3, 0xb5, 0x65, 0x5d, 0x6d, 0xd9, 0x4b, 0x5b,
	0x5b, 0xde, 0x82, 0xf3, 0x37, 0x16, 0xb5, 0xbd, 0x81, 0xde, 0x57, 0x1b, 0xe0, 0x8f, 0xec, 0x7c,
	0x09, 0x74, 0xdc, 0xe5, 0x55, 0xd6, 0xdd, 0x62, 0x61, 0xe9, 0x0b, 0x14, 0x55, 0x1b, 0xf7, 0x47,
	0x7c, 0x91, 0xb5, 0xa7, 0x3b, 0xa2, 0xa7, 0xff, 0x9e, 0x46, 0x1f, 0xa1, 0xc4, 0x2d, 0xd4, 0x66,
	0x1d, 0xba, 0xb9, 0x0f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x95, 0xbf, 0x74, 0x89, 0xe3, 0x01,
	0x00, 0x00,
}
