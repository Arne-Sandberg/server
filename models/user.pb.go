// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserRequest struct {
	Auth                 *Authentication `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	User                 *User           `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_a463b69e9fc10eba, []int{0}
}
func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (dst *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(dst, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetAuth() *Authentication {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *UserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserResponse struct {
	Meta                 *DefaultResponse `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	User                 *User            `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_a463b69e9fc10eba, []int{1}
}
func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (dst *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(dst, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetMeta() *DefaultResponse {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserID struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserID) Reset()         { *m = UserID{} }
func (m *UserID) String() string { return proto.CompactTextString(m) }
func (*UserID) ProtoMessage()    {}
func (*UserID) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_a463b69e9fc10eba, []int{2}
}
func (m *UserID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserID.Unmarshal(m, b)
}
func (m *UserID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserID.Marshal(b, m, deterministic)
}
func (dst *UserID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserID.Merge(dst, src)
}
func (m *UserID) XXX_Size() int {
	return xxx_messageInfo_UserID.Size(m)
}
func (m *UserID) XXX_DiscardUnknown() {
	xxx_messageInfo_UserID.DiscardUnknown(m)
}

var xxx_messageInfo_UserID proto.InternalMessageInfo

func (m *UserID) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type UserEmail struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEmail) Reset()         { *m = UserEmail{} }
func (m *UserEmail) String() string { return proto.CompactTextString(m) }
func (*UserEmail) ProtoMessage()    {}
func (*UserEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_a463b69e9fc10eba, []int{3}
}
func (m *UserEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEmail.Unmarshal(m, b)
}
func (m *UserEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEmail.Marshal(b, m, deterministic)
}
func (dst *UserEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEmail.Merge(dst, src)
}
func (m *UserEmail) XXX_Size() int {
	return xxx_messageInfo_UserEmail.Size(m)
}
func (m *UserEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEmail.DiscardUnknown(m)
}

var xxx_messageInfo_UserEmail proto.InternalMessageInfo

func (m *UserEmail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type User struct {
	// @inject_tag: storm:"id,increment"
	ID        uint32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty" storm:"id,increment"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName" json:"lastName,omitempty"`
	// @inject_tag: storm:"unique"
	Email                string               `protobuf:"bytes,4,opt,name=email" json:"email,omitempty" storm:"unique"`
	Password             string               `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	IsAdmin              bool                 `protobuf:"varint,6,opt,name=isAdmin" json:"isAdmin,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updatedAt" json:"updatedAt,omitempty"`
	LastSessionAt        *timestamp.Timestamp `protobuf:"bytes,9,opt,name=lastSessionAt" json:"lastSessionAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_a463b69e9fc10eba, []int{4}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *User) GetLastSessionAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSessionAt
	}
	return nil
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "user.UserRequest")
	proto.RegisterType((*UserResponse)(nil), "user.UserResponse")
	proto.RegisterType((*UserID)(nil), "user.UserID")
	proto.RegisterType((*UserEmail)(nil), "user.UserEmail")
	proto.RegisterType((*User)(nil), "user.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	GetOwnUser(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*UserResponse, error)
	GetUserByID(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*UserResponse, error)
	GetUserByEmail(ctx context.Context, in *UserEmail, opts ...grpc.CallOption) (*UserResponse, error)
	UpdateOwnUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserResponse, error)
	UpdateUserByID(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserResponse, error)
	DeleteOwnUser(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*DefaultResponse, error)
	DeleteUserByID(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*DefaultResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetOwnUser(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/user.UserService/GetOwnUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByID(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/user.UserService/GetUserByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByEmail(ctx context.Context, in *UserEmail, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/user.UserService/GetUserByEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/user.UserService/UpdateOwnUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUserByID(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/user.UserService/UpdateUserByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteOwnUser(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*DefaultResponse, error) {
	out := new(DefaultResponse)
	err := grpc.Invoke(ctx, "/user.UserService/DeleteOwnUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUserByID(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*DefaultResponse, error) {
	out := new(DefaultResponse)
	err := grpc.Invoke(ctx, "/user.UserService/DeleteUserByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	GetOwnUser(context.Context, *Authentication) (*UserResponse, error)
	GetUserByID(context.Context, *UserID) (*UserResponse, error)
	GetUserByEmail(context.Context, *UserEmail) (*UserResponse, error)
	UpdateOwnUser(context.Context, *User) (*UserResponse, error)
	UpdateUserByID(context.Context, *User) (*UserResponse, error)
	DeleteOwnUser(context.Context, *Authentication) (*DefaultResponse, error)
	DeleteUserByID(context.Context, *UserID) (*DefaultResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetOwnUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetOwnUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetOwnUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetOwnUser(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetUserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByID(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetUserByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByEmail(ctx, req.(*UserEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/UpdateOwnUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/UpdateUserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUserByID(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteOwnUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteOwnUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/DeleteOwnUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteOwnUser(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/DeleteUserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUserByID(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOwnUser",
			Handler:    _UserService_GetOwnUser_Handler,
		},
		{
			MethodName: "GetUserByID",
			Handler:    _UserService_GetUserByID_Handler,
		},
		{
			MethodName: "GetUserByEmail",
			Handler:    _UserService_GetUserByEmail_Handler,
		},
		{
			MethodName: "UpdateOwnUser",
			Handler:    _UserService_UpdateOwnUser_Handler,
		},
		{
			MethodName: "UpdateUserByID",
			Handler:    _UserService_UpdateUserByID_Handler,
		},
		{
			MethodName: "DeleteOwnUser",
			Handler:    _UserService_DeleteOwnUser_Handler,
		},
		{
			MethodName: "DeleteUserByID",
			Handler:    _UserService_DeleteUserByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_a463b69e9fc10eba) }

var fileDescriptor_user_a463b69e9fc10eba = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x9b, 0xd4, 0x4d, 0xe3, 0x49, 0x1d, 0xa4, 0x15, 0x12, 0x96, 0x85, 0xa0, 0xf8, 0x54,
	0x09, 0xe4, 0x8a, 0x70, 0x00, 0xc1, 0x85, 0x54, 0x46, 0x95, 0x2f, 0x20, 0xb9, 0xf4, 0x52, 0x71,
	0xd9, 0xc6, 0x93, 0x74, 0x25, 0xdb, 0x6b, 0xbc, 0x6b, 0x22, 0x9e, 0x86, 0x77, 0xe2, 0x89, 0xd0,
	0xce, 0xc6, 0x76, 0x40, 0x32, 0xb9, 0x79, 0x66, 0xfe, 0xef, 0x9f, 0xcd, 0xcc, 0x04, 0xa0, 0x51,
	0x58, 0x47, 0x55, 0x2d, 0xb5, 0x64, 0x8e, 0xf9, 0x0e, 0xbc, 0x0d, 0x96, 0x58, 0xf3, 0xdc, 0x26,
	0x83, 0xe7, 0x1b, 0x29, 0x37, 0x39, 0x5e, 0x52, 0x74, 0xdf, 0xac, 0x2f, 0xb5, 0x28, 0x50, 0x69,
	0x5e, 0x54, 0x56, 0x10, 0xde, 0xc1, 0xec, 0x56, 0x61, 0x9d, 0xe2, 0xf7, 0x06, 0x95, 0x66, 0x2f,
	0xc1, 0xe1, 0x8d, 0x7e, 0xf0, 0x47, 0xe7, 0xa3, 0x8b, 0xd9, 0xe2, 0x49, 0xd4, 0xba, 0x2d, 0x1b,
	0xfd, 0x80, 0xa5, 0x16, 0x2b, 0xae, 0x85, 0x2c, 0x53, 0x12, 0xb1, 0x67, 0x40, 0x3d, 0xfd, 0x31,
	0x89, 0x21, 0xa2, 0xc7, 0x90, 0x1b, 0xe5, 0xc3, 0x6f, 0x70, 0x66, 0xbd, 0x55, 0x25, 0x4b, 0x85,
	0xec, 0x15, 0x38, 0x05, 0x6a, 0xbe, 0x33, 0xf7, 0x3b, 0xf3, 0x18, 0xd7, 0xbc, 0xc9, 0x75, 0xab,
	0x4b, 0x49, 0x75, 0xd0, 0xdd, 0x87, 0x89, 0x89, 0x92, 0x98, 0xcd, 0x61, 0x9c, 0xc4, 0xe4, 0xea,
	0xa5, 0xe3, 0x24, 0x0e, 0x5f, 0x80, 0x6b, 0x2a, 0x9f, 0x0a, 0x2e, 0x72, 0xf6, 0x18, 0x4e, 0xd0,
	0x7c, 0x50, 0xdd, 0x4d, 0x6d, 0x10, 0xfe, 0x1e, 0x83, 0x63, 0x34, 0xff, 0xb2, 0xec, 0x29, 0xb8,
	0x6b, 0x51, 0x2b, 0xfd, 0x99, 0x17, 0x48, 0xad, 0xdd, 0xb4, 0x4f, 0xb0, 0x00, 0xa6, 0x39, 0xdf,
	0x15, 0x8f, 0xa9, 0xd8, 0xc5, 0x7d, 0x23, 0x67, 0xaf, 0x91, 0x21, 0x2a, 0xae, 0xd4, 0x56, 0xd6,
	0x99, 0x7f, 0x62, 0x89, 0x36, 0x66, 0x3e, 0x9c, 0x0a, 0xb5, 0xcc, 0x0a, 0x51, 0xfa, 0x93, 0xf3,
	0xd1, 0xc5, 0x34, 0x6d, 0x43, 0xf6, 0x0e, 0xdc, 0x55, 0x8d, 0x5c, 0x63, 0xb6, 0xd4, 0xfe, 0x29,
	0x0d, 0x20, 0x88, 0xec, 0x2a, 0xa3, 0x76, 0x95, 0xd1, 0xd7, 0x76, 0x95, 0x69, 0x2f, 0x36, 0x64,
	0x53, 0x65, 0x3b, 0x72, 0x7a, 0x98, 0xec, 0xc4, 0xec, 0x23, 0x78, 0xe6, 0xb7, 0xdc, 0xa0, 0x52,
	0x42, 0x96, 0x4b, 0xed, 0xbb, 0x07, 0xe9, 0xbf, 0x81, 0xc5, 0xaf, 0x63, 0x7b, 0x4c, 0x37, 0x58,
	0xff, 0x10, 0x2b, 0x64, 0x1f, 0x00, 0xae, 0x51, 0x7f, 0xd9, 0x96, 0x34, 0xe9, 0xa1, 0x63, 0x0a,
	0xd8, 0xde, 0x6a, 0x77, 0x27, 0x10, 0x1e, 0xb1, 0xd7, 0x30, 0xbb, 0x46, 0x6d, 0x92, 0x57, 0x3f,
	0x93, 0x98, 0x9d, 0xf5, 0xa2, 0x24, 0x1e, 0x40, 0xde, 0xc2, 0xbc, 0x43, 0xec, 0xf2, 0x1f, 0xf5,
	0x3a, 0x4a, 0x0c, 0xf6, 0xf2, 0x6e, 0x69, 0x0e, 0xed, 0x5b, 0xf7, 0xae, 0x6d, 0x00, 0x59, 0xc0,
	0xdc, 0x22, 0xdd, 0x0b, 0x0f, 0x33, 0x31, 0x78, 0x31, 0xe6, 0xd8, 0xb7, 0x19, 0x1c, 0xc9, 0xe0,
	0x7f, 0x23, 0x3c, 0x62, 0xef, 0x61, 0x6e, 0x5d, 0x06, 0x66, 0xf3, 0x1f, 0xf6, 0x6a, 0x7a, 0x37,
	0x29, 0x64, 0x86, 0xb9, 0xba, 0x9f, 0xd0, 0x3a, 0xdf, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x4b,
	0x7c, 0x48, 0x29, 0x42, 0x04, 0x00, 0x00,
}
